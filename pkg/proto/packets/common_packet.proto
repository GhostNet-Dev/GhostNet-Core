syntax = "proto3";
package ghostnet.packets;
option go_package = "github.com/GhostNet-Dev/GhostNet-Core/pkg/proto/packets";

import "user.proto";

enum PacketType {
    Reserved0 = 0;
    // master node packet type
    MasterNetwork = 1;
    FileTransfer = 2;
}

enum PacketSecondType {
    option allow_alias = true;
    GetGhostNetVersion = 0;
    NotificationMasterNode = 1;
    ConnectToMasterNode = 2;
    SearchGhostPubKey = 3;
    RequestMasterNodeList = 4;
    ResponseMasterNodeList = 5;
    SearchMasterPubKey = 6;
    RegistBadBlock = 7;
    BlockChain = 8;
    Forwarding = 9;

    RequestFile = 1;
    ResponseFile = 2;
}

enum PacketThirdType {
    Reserved1 = 0;
    GetHeightestBlock = 1;
    NewBlock = 2;
    GetBlock = 3;
    SendBlock = 4;
    ScanAddrBlock = 5; // not used...
    SendTransaction = 6;
    SearchTransaction = 7;
    SendDataTransaction = 8;
    SearchDataTransaction = 9;
    ScanBlockChain = 10;
    CheckGhostNickname = 11;
    SendDataTxIdList = 12;
    GetDataTxIdList = 13;
    ReportBlockError = 14;
    GetBlockHash = 15;
    SendBlockHash = 16;
    GetBlockPrevHash = 17;
    SendBlockPrevHash = 18;
    GetTxStatus = 19;
    SendTxStatus = 20;
}

enum RoutingType {
    None = 0;
    BroadCastingLevelZero = 1;
    BroadCasting = 2;
    Flooding = 3;
    SelectiveFlooding = 4;
}

message Header {
    PacketType Type = 1;
    PacketSecondType SecondType = 2;
    PacketThirdType ThirdType = 3;
    bool SqFlag = 4;
    bytes PacketData = 5;
    ptypes.GhostIp Source = 6;
}

message GhostPacket {
    string FromPubKeyAddress = 1;
    uint32 RequestId = 2;
    uint32 ClientId = 3;
    uint64 TimeId = 4;
}


message MasterPacket {
    GhostPacket Common = 1;
    RoutingType RoutingT = 2;
    uint32 Level = 3;
}