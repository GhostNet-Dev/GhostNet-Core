syntax = "proto3";
package ghostnet.packets;
option go_package = "github.com/GhostNet-Dev/GhostNet-Core/pkg/proto/packets";

import "user.proto";

enum PacketType {
    GetGhostNetVersion = 0;
    // master node packet type
    NotificationMasterNode = 1;
    ConnectToMasterNode = 3;
    SearchGhostPubKey = 4;
    RequestMasterNodeList = 5;
    ResponseMasterNodeList = 6;
    SearchMasterPubKey = 7;
    RegistBadBlock = 9;

    // blockchain packet type
    GetHeightestBlock = 10;
    NewBlock = 11;
    GetBlock = 12;
    SendBlock = 13;
    ScanAddrBlock = 14; // not used...
    SendTransaction = 15;
    SearchTransaction = 16;
    SendDataTransaction = 17;
    SearchDataTransaction = 18;
    ScanBlockChain = 19;
    CheckGhostNickname = 20;
    SendDataTxIdList = 21;
    GetDataTxIdList = 22;
    ReportBlockError = 23;
    GetBlockHash = 24;
    SendBlockHash = 25;
    GetBlockPrevHash = 26;
    SendBlockPrevHash = 27;
    GetTxStatus = 28;
    SendTxStatus = 29;
}

message Any {
    PacketType Type = 1;
    bool SqFlag = 2;
    bytes PacketData = 3;
}

message GhostPacket {
    string FromPubKeyAddress = 1;
    uint32 RequestId = 2;
    uint32 ClientId = 3;
    ptypes.GhostIp Source = 4;
    uint64 TimeId = 5;
}

enum RoutingType {
    None = 0;
    BroadCastingLevelZero = 1;
    BroadCasting = 2;
    Flooding = 3;
    SelectiveFlooding = 4;
}

message MasterPacket {
    GhostPacket Common = 1;
    RoutingType RoutingT = 2;
    uint32 Level = 3;
}