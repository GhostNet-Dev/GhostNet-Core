// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.6.1
// source: script.proto

package ptypes

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScriptType int32

const (
	ScriptType_Default   ScriptType = 0
	ScriptType_Reserved0 ScriptType = 1
	ScriptType_Reserved1 ScriptType = 2
	ScriptType_Reserved2 ScriptType = 3
	ScriptType_Reserved3 ScriptType = 4
	ScriptType_Reserved4 ScriptType = 5
)

// Enum value maps for ScriptType.
var (
	ScriptType_name = map[int32]string{
		0: "Default",
		1: "Reserved0",
		2: "Reserved1",
		3: "Reserved2",
		4: "Reserved3",
		5: "Reserved4",
	}
	ScriptType_value = map[string]int32{
		"Default":   0,
		"Reserved0": 1,
		"Reserved1": 2,
		"Reserved2": 3,
		"Reserved3": 4,
		"Reserved4": 5,
	}
)

func (x ScriptType) Enum() *ScriptType {
	p := new(ScriptType)
	*p = x
	return p
}

func (x ScriptType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScriptType) Descriptor() protoreflect.EnumDescriptor {
	return file_script_proto_enumTypes[0].Descriptor()
}

func (ScriptType) Type() protoreflect.EnumType {
	return &file_script_proto_enumTypes[0]
}

func (x ScriptType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScriptType.Descriptor instead.
func (ScriptType) EnumDescriptor() ([]byte, []int) {
	return file_script_proto_rawDescGZIP(), []int{0}
}

type ScriptHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      ScriptType `protobuf:"varint,1,opt,name=Type,proto3,enum=ghostnet.ptypes.ScriptType" json:"Type,omitempty"`
	Version   int32      `protobuf:"varint,2,opt,name=Version,proto3" json:"Version,omitempty"`
	Reserved0 int32      `protobuf:"varint,3,opt,name=reserved0,proto3" json:"reserved0,omitempty"`
	Reserved1 int32      `protobuf:"varint,4,opt,name=reserved1,proto3" json:"reserved1,omitempty"`
	Script    string     `protobuf:"bytes,5,opt,name=Script,proto3" json:"Script,omitempty"`
}

func (x *ScriptHeader) Reset() {
	*x = ScriptHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_script_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptHeader) ProtoMessage() {}

func (x *ScriptHeader) ProtoReflect() protoreflect.Message {
	mi := &file_script_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptHeader.ProtoReflect.Descriptor instead.
func (*ScriptHeader) Descriptor() ([]byte, []int) {
	return file_script_proto_rawDescGZIP(), []int{0}
}

func (x *ScriptHeader) GetType() ScriptType {
	if x != nil {
		return x.Type
	}
	return ScriptType_Default
}

func (x *ScriptHeader) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ScriptHeader) GetReserved0() int32 {
	if x != nil {
		return x.Reserved0
	}
	return 0
}

func (x *ScriptHeader) GetReserved1() int32 {
	if x != nil {
		return x.Reserved1
	}
	return 0
}

func (x *ScriptHeader) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

var File_script_proto protoreflect.FileDescriptor

var file_script_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x67, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22,
	0xad, 0x01, 0x0a, 0x0c, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x2f, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x30, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x30, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2a,
	0x64, 0x0a, 0x0a, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x30, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x31, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x32, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x64, 0x33, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x34, 0x10, 0x05, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x2d, 0x44, 0x65, 0x76,
	0x2f, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x2d, 0x43, 0x6f, 0x72, 0x65, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_script_proto_rawDescOnce sync.Once
	file_script_proto_rawDescData = file_script_proto_rawDesc
)

func file_script_proto_rawDescGZIP() []byte {
	file_script_proto_rawDescOnce.Do(func() {
		file_script_proto_rawDescData = protoimpl.X.CompressGZIP(file_script_proto_rawDescData)
	})
	return file_script_proto_rawDescData
}

var file_script_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_script_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_script_proto_goTypes = []interface{}{
	(ScriptType)(0),      // 0: ghostnet.ptypes.ScriptType
	(*ScriptHeader)(nil), // 1: ghostnet.ptypes.ScriptHeader
}
var file_script_proto_depIdxs = []int32{
	0, // 0: ghostnet.ptypes.ScriptHeader.Type:type_name -> ghostnet.ptypes.ScriptType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_script_proto_init() }
func file_script_proto_init() {
	if File_script_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_script_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_script_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_script_proto_goTypes,
		DependencyIndexes: file_script_proto_depIdxs,
		EnumInfos:         file_script_proto_enumTypes,
		MessageInfos:      file_script_proto_msgTypes,
	}.Build()
	File_script_proto = out.File
	file_script_proto_rawDesc = nil
	file_script_proto_goTypes = nil
	file_script_proto_depIdxs = nil
}
